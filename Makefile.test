ifndef DCL_VERSION
DCL_VERSION := $(shell echo $(shell git describe --tags) | sed 's/^v//')
endif

ifndef DCL_COMMIT
DCL_COMMIT := $(shell git log -1 --format='%H')
endif

UID := $(shell id -u)
#GID := $(shell id -g)

LOCALNET_DIR ?= .localnet
LOCALNET_DOCKER_NETWORK = "distributed-compliance-ledger_localnet"

IMAGE_NAME = "dcledger"

remove_containers = $(if $(1),docker rm -f $(1),true)
localnet_containers = $(shell docker ps --format '{{.ID}}' --filter network=$(LOCALNET_DOCKER_NETWORK))
clean_network = $(call remove_containers,$(call localnet_containers))

# test deploy vars
TEST_DEPLOY_IMAGE_NAME = "dcledger_deploy"
TEST_DEPLOY_NODE = "test_deploy_node"

image:
	docker build -t ${IMAGE_NAME} --build-arg TEST_UID=${UID} \
		--build-arg DCL_VERSION=${DCL_VERSION} --build-arg DCL_COMMIT=${DCL_COMMIT} .

localnet_init:
	/bin/bash ./genlocalnetconfig.sh
	/bin/bash ./genlocalnetappbins.sh

localnet_start:
	@if [ -d "${LOCALNET_DIR}/observer0" ]; then\
		docker-compose --profile observers up -d;\
	else\
		docker-compose up -d;\
	fi

localnet_stop:
	docker-compose down || ($(call clean_network) && docker-compose down)

localnet_export: localnet_stop
	docker-compose run node0 dcld export --for-zero-height  >genesis.export.node0.json
	docker-compose run node1 dcld export --for-zero-height  >genesis.export.node1.json
	docker-compose run node2 dcld export --for-zero-height  >genesis.export.node2.json
	docker-compose run node3 dcld export --for-zero-height  >genesis.export.node3.json
	@if [ -d "${LOCALNET_DIR}/observer0" ]; then\
		docker-compose run observer0 dcld export --for-zero-height  >genesis.export.observer0.json;\
	fi

localnet_reset: localnet_stop
	docker-compose run node0 dcld unsafe-reset-all
	docker-compose run node1 dcld unsafe-reset-all
	docker-compose run node2 dcld unsafe-reset-all
	docker-compose run node3 dcld unsafe-reset-all
	@if [ -d "${LOCALNET_DIR}/observer0" ]; then\
		docker-compose run observer0 dcld unsafe-reset-all;\
	fi

localnet_clean: localnet_stop
	rm -rf $(LOCALNET_DIR)
	rm -rf $(HOME)/.dcl


localnet_rebuild: localnet_clean localnet_init


test_deploy_image: integration_tests/deploy/Dockerfile
	cat $< | docker build -t ${TEST_DEPLOY_IMAGE_NAME} -

test_deploy_env_build: image test_deploy_image
	docker run -d --name ${TEST_DEPLOY_NODE} --tmpfs /tmp --tmpfs /run --tmpfs /run/lock \
		-v /sys/fs/cgroup:/sys/fs/cgroup:ro --network ${LOCALNET_DOCKER_NETWORK} ${TEST_DEPLOY_IMAGE_NAME}

test_deploy_env_clean:
	docker rm -f ${TEST_DEPLOY_NODE}

.PHONY: localnet_init localnet_start localnet_stop localnet_clean localnet_export \
		localnet_reset localnet_rebuild \
		test_deploy_image test_deploy_env_build test_deploy_env_clean
